/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureVerifier,
  SignatureVerifierInterface,
} from "../SignatureVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "recoverAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610346806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638428cf831461003b578063a7bb580314610078575b600080fd5b61004e6100493660046101ee565b6100aa565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008b610086366004610231565b610178565b6040805160ff909416845260208401929092529082015260600161006f565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050600081876040516020016100fa9291906102e2565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8916918301919091526060820187905260808201869052915060019060a0016020604051602081039080840390855afa158015610162573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b600080600083516041146101d25760405162461bcd60e51b815260206004820152601160248201527f494e56414c4944205349474e4154555245000000000000000000000000000000604482015260640160405180910390fd5b5050506020810151604082015160609092015160001a92909190565b6000806000806080858703121561020457600080fd5b84359350602085013560ff8116811461021c57600080fd5b93969395505050506040820135916060013590565b60006020828403121561024357600080fd5b813567ffffffffffffffff8082111561025b57600080fd5b818401915084601f83011261026f57600080fd5b81358181111561028157610281610323565b604051601f8201601f19908116603f011681019083821181831017156102a9576102a9610323565b816040528281528760208487010111156102c257600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000835160005b8181101561030357602081870181015185830152016102e9565b81811115610312576000828501525b509190910191825250602001919050565b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000806000a";

export class SignatureVerifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureVerifier> {
    return super.deploy(overrides || {}) as Promise<SignatureVerifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignatureVerifier {
    return super.attach(address) as SignatureVerifier;
  }
  connect(signer: Signer): SignatureVerifier__factory {
    return super.connect(signer) as SignatureVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureVerifierInterface {
    return new utils.Interface(_abi) as SignatureVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureVerifier {
    return new Contract(address, _abi, signerOrProvider) as SignatureVerifier;
  }
}
